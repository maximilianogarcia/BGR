<?php

namespace BGR\Serrano\ProductoBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * ProductoProveedorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductoProveedorRepository extends EntityRepository
{
	
	public function save($productoProveedor)
	{
		$em = $this->getEntityManager();
		$em->persist($productoProveedor);
		$em->flush();
	}
	
	
	public function delete($productoProveedor)
	{
		$em = $this->getEntityManager();
		$em->remove($em->merge($productoProveedor));
		$em->flush();
	}
	
	public function update(ProductoProveedor $productoProveedor)
	{
    	$em = $this->getEntityManager();
    	$conection = $em->getConnection();
 
    	$count = $conection->executeUpdate('UPDATE producto_proveedor 
    			SET precio_reposicion = ? WHERE producto_id = ? AND proveedor_id = ?', 
    			array($productoProveedor->getPrecioReposicion(),
    					$productoProveedor->getProductoId(),
    					$productoProveedor->getProveedorId()));
    	
      	$em->flush();
      	return $productoProveedor;
	}
	
	public function findByProductoId($producto_id)
	{
		$em = $this->getEntityManager();
		
    	$rsm = new ResultSetMapping();
    	

    	$rsm->addScalarResult('producto_id', 'producto_id');
    	$rsm->addScalarResult('proveedor_id', 'proveedor_id');
    	$rsm->addScalarResult('precio_reposicion', 'precio_reposicion');
    	$rsm->addScalarResult('name', 'name');
    	 
    
    	$query = $em->createNativeQuery("
		  SELECT   pp.producto_id as producto_id,
    			   pp.proveedor_id as proveedor_id,
	    			CASE
				        WHEN pp.precio_reposicion IS NULL THEN 0
				        ELSE pp.precio_reposicion 
				    END AS precio_reposicion,
    		       pr.name as name
          FROM Producto p
          JOIN producto_proveedor pp ON ( pp.producto_id = p.id )
    	  JOIN Proveedor pr on (pp.proveedor_id = pr.id)			
		  WHERE  p.id = ?",$rsm)->setParameter(1,$producto_id);
    
    	$result = $query->getResult(); 
    	return $result;
	}
	
	
}
