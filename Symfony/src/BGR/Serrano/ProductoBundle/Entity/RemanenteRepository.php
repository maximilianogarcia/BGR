<?php

namespace BGR\Serrano\ProductoBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * RemanenteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RemanenteRepository extends EntityRepository
{
	public function save($remanente)
    {   
        $em = $this->getEntityManager();
        $em->persist($em->merge($remanente));
        $em->flush();
    }

    public function findRemanente($productoId)
    {
    	$em = $this->getEntityManager();
    
    	$rsm = new ResultSetMapping();
    	 
    
    	$rsm->addScalarResult('remanente_id', 'remanente_id');
    	$rsm->addScalarResult('cantidad', 'cantidad');
    	$rsm->addScalarResult('producto_name', 'producto_name');
    	$rsm->addScalarResult('producto_id', 'producto_id');
    
    
    
    	$query = $em->createNativeQuery('
		  SELECT
    			r.id as remanente_id,
				r.cantidad as cantidad,
    			p.name as producto_name,
    			p.id as producto_id
    
          FROM Producto p
    	  JOIN Remanente r ON(r.producto_id = p.id)
		  WHERE  p.id = ?
          ',$rsm)->setParameter(1,$productoId);
    
    	$result = $query->getResult();
    	return $result;
    }
    public function getAllRemanentes()
    {
    	$em = $this->getEntityManager();
    
    	$rsm = new ResultSetMapping();
    
    
    	$rsm->addScalarResult('remanente_id', 'remanente_id');
    	$rsm->addScalarResult('cantidad', 'cantidad');
    	$rsm->addScalarResult('producto_name', 'producto_name');
    	$rsm->addScalarResult('producto_id', 'producto_id');
    
    
    
    	$query = $em->createNativeQuery('
		  SELECT
    			r.id as remanente_id,
				r.cantidad as cantidad,
    			p.name as producto_name,
    			p.id as producto_id
    
          FROM Producto p
    	  JOIN Remanente r ON(r.producto_id = p.id)
          ',$rsm);
    
    	$result = $query->getResult();
    	return $result;
    }
    
    public function getRemanentesParaUnaListaDeProductos($listaDeIds)
    {
    	$em = $this->getEntityManager();
    
    	$rsm = new ResultSetMapping();
    
    	$producto = new Producto();
   
    	$result = new ArrayCollection();
    	foreach ($listaDeIds as $unId){
    		$producto->setId($unId);
    		$tmp=$em->getRepository('BGRSerranoProductoBundle:Remanente')->findOneBy(Array("producto"=>$producto));
    		if($tmp != null){
    			$rem = Array(
    					"remanente_id"=>$tmp->getId(),
    					"producto_id"=>$tmp->getProducto()->getId(),
    					"producto_name"=>$tmp->getProducto()->getName(),
    					"cantidad"=>$tmp->getCantidad()
    			);
    			$result->add(new ArrayCollection($rem));
    		}
    	}
    	return $result;
    }
}
