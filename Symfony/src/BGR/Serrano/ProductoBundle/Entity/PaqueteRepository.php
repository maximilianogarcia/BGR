<?php

namespace BGR\Serrano\ProductoBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * PaqueteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PaqueteRepository extends EntityRepository
{
	public function findDisponiblesBy(Presentacion $presentacion)
	{
		$em = $this->getEntityManager();
		$result = $em->createQuery("SELECT COUNT(l.id) FROM BGRSerranoProductoBundle:Paquete l
            WHERE l.presentacion = :presentacion  AND l.estado =  'DISPONIBLE'"
		)->setParameter('presentacion', $presentacion->getId())->getSingleScalarResult();
	
		return $result;
	}

	public function fraccionar($paqueteId)
   {    	 
    	$em = $this->getEntityManager();
      $p = $em->getRepository('BGRSerranoProductoBundle:Paquete')->find($paqueteId);
    	$p->setEstado('FRACCIONADO');
    	$em->persist($p);
    	$conection = $em->getConnection();
     	$em->flush();
     	return $p;
   }

   
   public function validarPaqueteProducto($paqueteId, $productoId)
   {
   	$em = $this->getEntityManager();

   	$paquete=$em->getRepository('BGRSerranoProductoBundle:Paquete')->find($paqueteId);
   	if($paquete ==null || $paquete->getEstado() != "DISPONIBLE"){
   		return false;
   	}
   	
   	$presentacion= $em->getRepository('BGRSerranoProductoBundle:Presentacion')->find($paquete->getPresentacion()->getId());
  
   	return $presentacion->getProducto()->getId() == $productoId;
   }
   
   public function findPaquetesByProducto($producto_id, $estado)
   {
   	
   	$em = $this->getEntityManager();
   	
   	$rsm = new ResultSetMapping();

   	$rsm->addScalarResult('id', 'id');
   	$rsm->addScalarResult('presentacion_id', 'presentacion_id');
   	$rsm->addScalarResult('codigo', 'codigo');
   	$rsm->addScalarResult('estado', 'estado');
   	$rsm->addScalarResult('cantidad', 'cantidad');
   	$rsm->addScalarResult('unidad', 'unidad');
   	
   	$query = $em->createNativeQuery('
		  SELECT pa.id,
   			pa.presentacion_id,
   			pa.codigo,
   			pa.estado,
   			p.cantidad,
   			p.unidadDeMedida_id as unidad
            FROM Presentacion p
            JOIN Paquete pa ON ( pa.presentacion_id = p.id )
    	    JOIN Producto pr on (p.producto_id = pr.id)
		   WHERE pr.id = ? AND pa.estado= ?
      ',$rsm)->setParameter(1,$producto_id)->setParameter(2, $estado);
   	
   	$result = $query->getResult();   	
   	return $result;
   	
   }
   
   public function markMixed($paqueteId)
   {
   	$em = $this->getEntityManager();
   	$p = $em->getRepository('BGRSerranoProductoBundle:Paquete')->find($paqueteId);
   	$p->setEstado('MIXED');
   	$em->persist($p);
   	$conection = $em->getConnection();
   	$em->flush();
   	return $p;
   }
   
   public function save($paquete)
   {
   	$em = $this->getEntityManager();
   	$em->persist($paquete);
   	$em->flush();
   }
    
   
}
